name: Test
on: [push]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10"]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry --version
          poetry config virtualenvs.in-project true
          poetry config installer.parallel true
      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-root --with dev
          poetry install --no-interaction
      - name: Enforce code formatting
        run: poetry run black .
      - name: Enforce code style
        run: poetry run pylint $(git ls-files './cfb_ranker/*.py')
      - name: Enforce type hinting
        run: poetry run mypy --ignore-missing-imports --strict $(git ls-files './cfb_ranker/*.py')
      - name: Test with pytest
        run: poetry run pytest --cov=cfb_ranker --cov-report=xml
      - name: Upload log artifacts
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: temp/
